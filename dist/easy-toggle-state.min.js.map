{"version":3,"sources":["easy-toggle-state.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","document","ATTR_CLASS","ATTR_EVENT","ATTR_OUTSIDE","retrieveTargets","element","hasAttribute","querySelectorAll","getAttribute","parentElement","documentEventHandler","event","target","closest","concat","forEach","isToggleActive","manageToggle","addEventListener","triggerOffHandler","targetElement","manageTriggerOutside","removeEventListener","manageTarget","triggerElement","setAttribute","triggerOffList","triggerOff","className","classList","toggle","targetElements","init","trigger","contains","add","preventDefault","triggerEscElements","window","key","keyCode","onLoad","initEasyToggleState"],"mappings":"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","file":"easy-toggle-state.min.js","sourcesContent":["/*\n\t-------------------------------------------------------------------\n\teasy-toggle-state\n\tA tiny JavaScript plugin to toggle the state of any HTML element in most of contexts with ease.\n\n\t@version v1.0.0\n\t@link https://github.com/Twikito/easy-toggle-state#readme\n\t@license MIT : https://github.com/Twikito/easy-toggle-state/blob/master/LICENSE\n\t-------------------------------------------------------------------\n*/\n\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n(function (document) {\n\n\tvar TOGGLE_CLASS_PREFIX = 'toggle-'; // Prefix should end by hyphen\n\n\tvar ATTR_CLASS = 'data-' + TOGGLE_CLASS_PREFIX + 'class',\n\t    ATTR_TARGET_ALL = 'data-' + TOGGLE_CLASS_PREFIX + 'target-all',\n\t    ATTR_TARGET_PARENT = 'data-' + TOGGLE_CLASS_PREFIX + 'target-parent',\n\t    ATTR_TARGET_SELF = 'data-' + TOGGLE_CLASS_PREFIX + 'target-self',\n\t    ATTR_IS_ACTIVE = 'data-' + TOGGLE_CLASS_PREFIX + 'is-active',\n\t    ATTR_EVENT = 'data-' + TOGGLE_CLASS_PREFIX + 'event',\n\t    ATTR_OUTSIDE = 'data-' + TOGGLE_CLASS_PREFIX + 'outside',\n\t    ATTR_TARGET_ONLY = 'data-' + TOGGLE_CLASS_PREFIX + 'target-only',\n\t    ATTR_ESCAPE = 'data-' + TOGGLE_CLASS_PREFIX + 'escape',\n\t    ATTR_TRIGGER_OFF = 'data-' + TOGGLE_CLASS_PREFIX + 'trigger-off',\n\t    ATTR_TARGET_STATE = 'data-' + TOGGLE_CLASS_PREFIX + 'state';\n\n\tvar ATTR_EXPANDED = 'aria-expanded',\n\t    ATTR_SELECTED = 'aria-selected';\n\n\t// Retrieve all targets of a trigger element\n\tvar retrieveTargets = function retrieveTargets(element) {\n\t\tif (element.hasAttribute(ATTR_TARGET_ALL)) return document.querySelectorAll(element.getAttribute(ATTR_TARGET_ALL));else if (element.hasAttribute(ATTR_TARGET_PARENT)) return element.parentElement.querySelectorAll(element.getAttribute(ATTR_TARGET_PARENT));else if (element.hasAttribute(ATTR_TARGET_SELF)) return element.querySelectorAll(element.getAttribute(ATTR_TARGET_SELF));\n\t\treturn [];\n\t};\n\n\t// Toggle off all 'toggle-outside' elements when reproducing specified or click event outside trigger or target elements\n\tvar documentEventHandler = function documentEventHandler(event) {\n\t\tvar target = event.target;\n\n\t\tif (!target.closest('[' + ATTR_TARGET_STATE + '=\"true\"]')) {\n\t\t\t[].concat(_toConsumableArray(document.querySelectorAll('[' + ATTR_CLASS + '][' + ATTR_OUTSIDE + ']'))).forEach(function (element) {\n\t\t\t\tif (element != target && element.isToggleActive) manageToggle(element);\n\t\t\t});\n\t\t\tif (target.hasAttribute(ATTR_OUTSIDE) && target.isToggleActive) document.addEventListener(target.getAttribute(ATTR_EVENT) || 'click', documentEventHandler, false);\n\t\t}\n\t};\n\n\t// Manage click on 'trigger-off' elements\n\tvar triggerOffHandler = function triggerOffHandler(event) {\n\t\tmanageToggle(event.target.targetElement);\n\t};\n\n\t// Manage event ouside trigger or target elements\n\tvar manageTriggerOutside = function manageTriggerOutside(element) {\n\t\tif (element.hasAttribute(ATTR_OUTSIDE)) {\n\t\t\tif (element.isToggleActive) document.addEventListener(element.getAttribute(ATTR_EVENT) || 'click', documentEventHandler, false);else document.removeEventListener(element.getAttribute(ATTR_EVENT) || 'click', documentEventHandler, false);\n\t\t}\n\t};\n\n\t// Manage attributes and events of target elements\n\tvar manageTarget = function manageTarget(targetElement, triggerElement) {\n\t\tif (triggerElement.hasAttribute(ATTR_OUTSIDE)) targetElement.setAttribute(ATTR_TARGET_STATE, triggerElement.isToggleActive);\n\n\t\tvar triggerOffList = targetElement.querySelectorAll('[' + ATTR_TRIGGER_OFF + ']');\n\t\tif (triggerOffList.length > 0) {\n\t\t\tif (triggerElement.isToggleActive) {\n\t\t\t\ttriggerOffList.forEach(function (triggerOff) {\n\t\t\t\t\ttriggerOff.targetElement = triggerElement;\n\t\t\t\t\ttriggerOff.addEventListener('click', triggerOffHandler, false);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttriggerOffList.forEach(function (triggerOff) {\n\t\t\t\t\ttriggerOff.removeEventListener('click', triggerOffHandler, false);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\t// Toggle class and aria on trigger and target elements\n\tvar manageToggle = function manageToggle(element) {\n\t\tvar className = element.getAttribute(ATTR_CLASS);\n\t\telement.isToggleActive = !element.isToggleActive;\n\t\t//console.log(\"toggle to \"+element.isToggleActive);\n\n\t\tif (!element.hasAttribute(ATTR_TARGET_ONLY)) element.classList.toggle(className);\n\n\t\tif (element.hasAttribute(ATTR_EXPANDED)) element.setAttribute(ATTR_EXPANDED, element.isToggleActive);\n\n\t\tif (element.hasAttribute(ATTR_SELECTED)) element.setAttribute(ATTR_SELECTED, element.isToggleActive);\n\n\t\tvar targetElements = retrieveTargets(element);\n\t\tfor (var i = 0; i < targetElements.length; i++) {\n\t\t\ttargetElements[i].classList.toggle(className);\n\t\t\tmanageTarget(targetElements[i], element);\n\t\t}\n\n\t\tmanageTriggerOutside(element);\n\t};\n\n\t// Initialization\n\tvar init = function init() {\n\n\t\t// Active by default management\n\t\t[].concat(_toConsumableArray(document.querySelectorAll('[' + ATTR_CLASS + '][' + ATTR_IS_ACTIVE + ']'))).forEach(function (trigger) {\n\t\t\ttrigger.isToggleActive = true;\n\t\t\tvar className = trigger.getAttribute(ATTR_CLASS);\n\n\t\t\tif (!trigger.hasAttribute(ATTR_TARGET_ONLY) && !trigger.classList.contains(className)) trigger.classList.add(className);\n\n\t\t\tif (trigger.hasAttribute(ATTR_EXPANDED) && trigger.getAttribute(ATTR_EXPANDED)) trigger.setAttribute(ATTR_EXPANDED, true);\n\n\t\t\tif (trigger.hasAttribute(ATTR_SELECTED) && !trigger.getAttribute(ATTR_SELECTED)) trigger.setAttribute(ATTR_SELECTED, true);\n\n\t\t\tvar targetElements = retrieveTargets(trigger);\n\t\t\tfor (var i = 0; i < targetElements.length; i++) {\n\t\t\t\tif (!targetElements[i].classList.contains(trigger.getAttribute(ATTR_CLASS))) targetElements[i].classList.add(className);\n\t\t\t\tmanageTarget(targetElements[i], trigger);\n\t\t\t}\n\n\t\t\tmanageTriggerOutside(trigger);\n\t\t});\n\n\t\t// Set specified or click event on each trigger element\n\t\t[].concat(_toConsumableArray(document.querySelectorAll('[' + ATTR_CLASS + ']'))).forEach(function (trigger) {\n\t\t\ttrigger.addEventListener(trigger.getAttribute(ATTR_EVENT) || 'click', function (event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tmanageToggle(trigger);\n\t\t\t}, false);\n\t\t});\n\n\t\t// Escape key management\n\t\tvar triggerEscElements = [].concat(_toConsumableArray(document.querySelectorAll('[' + ATTR_CLASS + '][' + ATTR_ESCAPE + ']')));\n\t\tif (triggerEscElements.length > 0) {\n\t\t\tdocument.addEventListener('keyup', function (event) {\n\t\t\t\tevent = event || window.event;\n\t\t\t\tvar isEscape = false;\n\n\t\t\t\tif ('key' in event) isEscape = event.key === 'Escape' || event.key === 'Esc';else isEscape = event.keyCode === 27;\n\n\t\t\t\tif (isEscape) {\n\t\t\t\t\ttriggerEscElements.forEach(function (trigger) {\n\t\t\t\t\t\tif (trigger.isToggleActive) manageToggle(trigger);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\t};\n\n\tvar onLoad = function onLoad() {\n\t\tinit();\n\t\tdocument.removeEventListener('DOMContentLoaded', onLoad);\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', onLoad);\n\twindow.initEasyToggleState = init;\n})(document);"]}